import arcpy
#Generate the sum of population for each admin 2 level. Note that the coast line of the raster does not match exactly the shapefile. #In order to make sure no coastal population is excluded the shape file coast line should be buffered or edited manually to make sure #the center of each pixel fall into an admin2 polygon . Due to the time constraint of this exercise this step was skipped but should #be considered in real life.
outfile = r"C:/Users/steph/OneDrive/Documents/ArcGIS/Default.gdb/ZonalSt_shp2"
arcpy.gp.ZonalStatisticsAsTable_sa("mdg_admbnda_adm2_BNGRC_OCHA_20181031", "ADM2_PCODE", "mdg_pd_2020_1km.tif",outfile , "DATA", "SUM")
#Join the resulting table to the admin2 shapefile
arcpy.AddJoin_management(in_layer_or_view="mdg_admbnda_adm2_BNGRC_OCHA_20181031", in_field="ADM2_PCODE", join_table="ZonalSt_shp2", join_field="ADM2_PCODE", join_type="KEEP_ALL")
# The json file containing the cyclon data was downloaded manually for the api it converted into feature for analysis
arcpy.JSONToFeatures_conversion(in_json_file="C:/data/WFP_test/getgeometry.json", out_features="C:/data/WFP_test/WFP_test/Default.gdb/json_cyclon_data")
#Filter only the necessary wind forces. Note that this step could also have been done directly at the step of the data download.
# I chose this simple method I more familiar with due to the time constraint, but in real life I would investigate further.
arcpy.conversion.ExportFeatures(
    in_features=r"C:/data/WFP_test/WFP_test/Default.gdb/json_cyclon_data",
    out_features=r"C:\data\WFP_test\WFP.gdb\wind_data_filtered",
    where_clause="polygonlab IN ('120 km/h', '60 km/h', '90 km/h')",
    use_field_alias_as_name="NOT_USE_ALIAS",
    field_mapping=r'eventtype "eventtype" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,eventtype,0,80;eventid "eventid" true true false 9 Long 0 9,First,#,extra layer\getgeometry-polygon,eventid,-1,-1;episodeid "episodeid" true true false 9 Long 0 9,First,#,extra layer\getgeometry-polygon,episodeid,-1,-1;eventname "eventname" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,eventname,0,80;glide "glide" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,glide,0,80;name "name" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,name,0,80;descriptio "descriptio" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,descriptio,0,80;htmldescri "htmldescri" true true false 83 Text 0 0,First,#,extra layer\getgeometry-polygon,htmldescri,0,83;icon "icon" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,icon,0,80;iconoveral "iconoveral" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,iconoveral,0,80;url "url" true true false 254 Text 0 0,First,#,extra layer\getgeometry-polygon,url,0,254;alertlevel "alertlevel" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,alertlevel,0,80;alertscore "alertscore" true true false 9 Long 0 9,First,#,extra layer\getgeometry-polygon,alertscore,-1,-1;episodeale "episodeale" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,episodeale,0,80;episodea_1 "episodea_1" true true false 24 Double 15 23,First,#,extra layer\getgeometry-polygon,episodea_1,-1,-1;istemporar "istemporar" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,istemporar,0,80;iscurrent "iscurrent" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,iscurrent,0,80;country "country" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,country,0,80;fromdate "fromdate" true true false 8 Date 0 0,First,#,extra layer\getgeometry-polygon,fromdate,-1,-1;todate "todate" true true false 8 Date 0 0,First,#,extra layer\getgeometry-polygon,todate,-1,-1;iso3 "iso3" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,iso3,0,80;source "source" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,source,0,80;sourceid "sourceid" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,sourceid,0,80;polygonlab "polygonlab" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,polygonlab,0,80;Class "Class" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,Class,0,80;countryonl "countryonl" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,countryonl,0,80;affectedco "affectedco" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,affectedco,0,80;severityda "severityda" true true false 119 Text 0 0,First,#,extra layer\getgeometry-polygon,severityda,0,119;polygondat "polygondat" true true false 8 Date 0 0,First,#,extra layer\getgeometry-polygon,polygondat,-1,-1;iconeventl "iconeventl" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,iconeventl,0,80;iconitemli "iconitemli" true true false 80 Text 0 0,First,#,extra layer\getgeometry-polygon,iconitemli,0,80;forecast "forecast" true true false 1 Short 0 1,First,#,extra layer\getgeometry-polygon,forecast,-1,-1',
    sort_field=None)
# the Population layer and the wind force layer are intersected
arcpy.Intersect_analysis(in_features="admin2_pop #;wind_data_filtered #", out_feature_class="C:/data/WFP_test/WFP.gdb/intersect_result", join_attributes="ALL", cluster_tolerance="-1 Unknown", output_type="INPUT")
#To get the resulting table, table a pivot from the intersection should be done. 
#In the code below the percentage information is missing
arcpy.Statistics_analysis(in_table="intersect_result", out_table="C:/data/WFP_test/WFP.gdb/test_pivot", statistics_fields="SUM SUM", case_field="ADM0_EN;ADM1_EN;ADM2_PCODE;ADM2_EN;polygonlab")
#Export the table. Note that the step of renaming the column was done manually using aliases
arcpy.conversion.TableToExcel(
    Input_Table="test_pivot",
    Output_Excel_File=r"C:\data\WFP_test\WFP_test\test_pivot_TableToExcel.xlsx",
    Use_field_alias_as_column_header="ALIAS",
    Use_domain_and_subtype_description="CODE")
